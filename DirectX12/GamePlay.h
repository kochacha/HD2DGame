#pragma once
#include "Scene.h"
#include "Camera.h"
#include "GameObjectManager.h"
#include "BattleObjectManager.h"
#include "ParticleEmitter.h"
#include "ParticleManager.h"
#include "Number.h"
#include "Audio.h"
#include "Texture2D.h"
#include "GameSetting.h"

namespace KochaEngine
{
	class Map;
	class LightManager;
	class Text;

	class GamePlay : public Scene
	{
		enum CommandTab
		{
			DEFAULT_TAB,
			ATTACK_TAB,
			SPELL_TAB,
			SKILL_TAB,
			ITEM_TAB,
		};

	private:
		Map* map;
		Camera* camera;
		GameObjectManager* gManager;
		BattleObjectManager* bManager;
		ParticleManager* pManager;
		ParticleEmitter* emitter;
		LightManager* lightManager;
		BattleObject* currentActiveActor;
		BattleObject* targetActor;

		Object* floor;
		Object* skyObj;

		Texture2D* fadeTexture;
		Texture2D* defaultWakuTexture;
		Texture2D* anotherWakuTexture;
		Texture2D* defaultCommandTexture;
		Texture2D* waitCommandTexture;
		Texture2D* anotherCommandTexture;
		Texture2D* cursorTexture;
		Text* battleLongText;
		Text* battleShortText;
		Text* battleNameText;
		Text* commandTitleText;
		Text* enemyNameText[MAX_BATTLE_ENEMY];

		//現在のコマンドタブ
		CommandTab currentTab;

		//カーソルのポジション
		Vector2 cursorPos;

		//フェードアウトするかどうか
		bool fadeFlag;
		//バトル中かどうか
		bool isBattle;
		//バトルが終わっているかどうか
		bool isBattleEnd;
		//バトル開始の瞬間かどうか
		bool isBattleStart;
		//コマンド上の表示名を更新するかどうか
		bool isCommandTitleUpdate;
		//次のターンに行くかどうか
		bool isTurnUpdate;
		//こうげき・じゅもん・とくぎモーション中かどうか
		bool isAttackMotion;
		//ぼうぎょモーション中かどうか
		bool isDefenceMotion;
		//敵のターンかどうか
		bool isEnemyTurn;
		//キャラクターが全滅しているかどうか
		bool isCharacterDestroy;
		//敵が全滅しているかどうか
		bool isEnemyDestroy;
		//リザルト時に一度だけ行う処理用フラグ
		bool isResultOnce;

		//フェードの透明度
		float fadeAlpha;

		int frameCount;
		int seconds;
		int endCount;
		//行動時のアニメーションの時間	
		int motionTime;
		//バトル参加キャラの数
		int battleCharaCount;
		//バトルスタート時の硬直時間
		int battleStartWait;
		//リザルト進行の番号
		int resultFlowNum;
		//リザルトでボタンを押したときの待ち時間
		int resultFlowWait;

		//コマンド番号
		unsigned int commandNum;
		//コマンド番号保存用 : 0,デフォルト 1,こうげき 2,じゅもん 3,とくぎ 4,どうぐ
		unsigned int preCommandNum[5];


		void BattleInitialize();
		void BattleUpdate();
		void BattleFlowUpdate();
		void BattleObjDraw();
		void BattleAlphaObjDraw();
		void BattleSpriteDraw();

		void FieldUpdate();
		void FieldObjDraw();
		void FieldAlphaObjDraw();
		void FieldSpriteDraw();

		void BattleEnd();
		void TurnInitialize();
		void ActiveActorUpdate();
		void AttackMotionUpdate();
		void DefenceMotionUpdate();
		void ResultUpdate();
		void EnemyNameUpdate();
		void CommandDraw();
		void MoveCursor();
		void CursorPosSetting();
		void DefaultTab();
		void AttackTab();
		unsigned int CommandNumUp(const unsigned int arg_commandNum);
		unsigned int CommandNumDown(const unsigned int arg_commandNum);

	public:
		GamePlay();
		~GamePlay() override;
		void Initialize() override;
		void Update() override;
		void SpriteDraw() override;
		void ObjDraw() override;
		void AlphaObjDraw() override;
		void DrawGUI() override;
		void Load() override;
		Scenes Next() override;
		void CountTime();
		void FadeUpdate();
	};
}
